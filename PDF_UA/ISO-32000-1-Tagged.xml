<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<profile xmlns="http://www.verapdf.org/ValidationProfile" flavour="PDFA_2_U">
    <details creator="veraPDF Consortium" created="2019-11-06T10:05:46.911+03:00">
        <name>Tagged pdf profile for PDF 1.7 specification</name>
        <description>Profile for validation of tagged pdf structure tree relations</description>
    </details>
    <hash></hash>
    <rules>
        <rule object="SENonStandard" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1"/>
            <description>Every structure element shall be mapped to standard type</description>
            <test>false</test>
            <error>
                <message>Structure element does not map to standard structure type</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="2"/>
            <description>StructTreeRoot elem should contain zero or one Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length &lt;= 1</test>
            <error>
                <message>StructTreeRoot contains more than one Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="3"/>
            <description>StructTreeRoot elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="4"/>
            <description>StructTreeRoot elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="5"/>
            <description>StructTreeRoot elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="6"/>
            <description>StructTreeRoot elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="7"/>
            <description>StructTreeRoot elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="8"/>
            <description>StructTreeRoot elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="9"/>
            <description>StructTreeRoot elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="10"/>
            <description>StructTreeRoot elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="11"/>
            <description>StructTreeRoot elem should not contain Note kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Note').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Note kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="12"/>
            <description>StructTreeRoot elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="13"/>
            <description>StructTreeRoot elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="14"/>
            <description>StructTreeRoot elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="15"/>
            <description>StructTreeRoot elem should not contain Lbl kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Lbl').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Lbl kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="16"/>
            <description>StructTreeRoot elem should not contain Span kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Span').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Span kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="17"/>
            <description>StructTreeRoot elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="18"/>
            <description>StructTreeRoot elem should not contain Link kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Link').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Link kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="19"/>
            <description>StructTreeRoot elem should not contain Reference kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Reference').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Reference kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="20"/>
            <description>StructTreeRoot elem should not contain Annot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Annot').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Annot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="21"/>
            <description>StructTreeRoot elem should not contain Form kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Form').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Form kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="22"/>
            <description>StructTreeRoot elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="23"/>
            <description>StructTreeRoot elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="24"/>
            <description>StructTreeRoot elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="25"/>
            <description>StructTreeRoot elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="26"/>
            <description>StructTreeRoot elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="27"/>
            <description>StructTreeRoot elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="28"/>
            <description>StructTreeRoot elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="29"/>
            <description>StructTreeRoot elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="30"/>
            <description>StructTreeRoot elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="31"/>
            <description>StructTreeRoot elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="32"/>
            <description>StructTreeRoot elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="33"/>
            <description>StructTreeRoot elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="34"/>
            <description>StructTreeRoot elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="35"/>
            <description>StructTreeRoot elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="36"/>
            <description>StructTreeRoot elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="37"/>
            <description>StructTreeRoot elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="38"/>
            <description>StructTreeRoot elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="39"/>
            <description>StructTreeRoot elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="40"/>
            <description>StructTreeRoot elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="41"/>
            <description>StructTreeRoot elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="42"/>
            <description>StructTreeRoot elem should not contain Figure kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Figure').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Figure kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="43"/>
            <description>StructTreeRoot elem should not contain Formula kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Formula').length == 0</test>
            <error>
                <message>StructTreeRoot elem contains Formula kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructTreeRoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="44"/>
            <description>StructTreeRoot elem should not contain content item kid</description>
            <test>hasContentItems == false</test>
            <error>
                <message>StructTreeRoot elem contains content item kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="45"/>
            <description>Document elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>Document elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="46"/>
            <description>Document elem should contain zero or one H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length &lt;= 1</test>
            <error>
                <message>Document contains more than one H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="47"/>
            <description>Document elem should not contain Lbl kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Lbl').length == 0</test>
            <error>
                <message>Document elem contains Lbl kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="48"/>
            <description>Document elem should not contain Span kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Span').length == 0</test>
            <error>
                <message>Document elem contains Span kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="49"/>
            <description>Document elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>Document elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="50"/>
            <description>Document elem should not contain Reference kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Reference').length == 0</test>
            <error>
                <message>Document elem contains Reference kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="51"/>
            <description>Document elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>Document elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="52"/>
            <description>Document elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>Document elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="53"/>
            <description>Document elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>Document elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="54"/>
            <description>Document elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>Document elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="55"/>
            <description>Document elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>Document elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="56"/>
            <description>Document elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>Document elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="57"/>
            <description>Document elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>Document elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="58"/>
            <description>Document elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>Document elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="59"/>
            <description>Document elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>Document elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="60"/>
            <description>Document elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>Document elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="61"/>
            <description>Document elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>Document elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="62"/>
            <description>Document elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>Document elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="63"/>
            <description>Document elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>Document elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="64"/>
            <description>Document elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>Document elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="65"/>
            <description>Document elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>Document elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="66"/>
            <description>Document elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>Document elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="67"/>
            <description>Document elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>Document elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDocument" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="68"/>
            <description>Document elem should not contain content item kid</description>
            <test>hasContentItems == false</test>
            <error>
                <message>Document elem contains content item kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEPart" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="69"/>
            <description>Part elem should not contain Span kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Span').length == 0</test>
            <error>
                <message>Part elem contains Span kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEPart" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="70"/>
            <description>Part elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>Part elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEPart" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="71"/>
            <description>Part elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>Part elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEPart" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="72"/>
            <description>Part elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>Part elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEPart" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="73"/>
            <description>Part elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>Part elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEPart" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="74"/>
            <description>Part elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>Part elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEPart" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="75"/>
            <description>Part elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>Part elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEPart" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="76"/>
            <description>Part elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>Part elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEPart" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="77"/>
            <description>Part elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>Part elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEPart" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="78"/>
            <description>Part elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>Part elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEPart" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="79"/>
            <description>Part elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>Part elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEPart" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="80"/>
            <description>Part elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>Part elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEPart" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="81"/>
            <description>Part elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>Part elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEPart" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="82"/>
            <description>Part elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>Part elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEPart" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="83"/>
            <description>Part elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>Part elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEPart" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="84"/>
            <description>Part elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>Part elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEPart" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="85"/>
            <description>Part elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>Part elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEPart" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="86"/>
            <description>Part elem should not contain content item kid</description>
            <test>hasContentItems == false</test>
            <error>
                <message>Part elem contains content item kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEDiv" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="87"/>
            <description>Div elem should not contain content item kid</description>
            <test>hasContentItems == false</test>
            <error>
                <message>Div elem contains content item kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="88"/>
            <description>Art elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>Art elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="89"/>
            <description>Art elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>Art elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="90"/>
            <description>Art elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>Art elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="91"/>
            <description>Art elem should contain zero or one H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length &lt;= 1</test>
            <error>
                <message>Art contains more than one H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="92"/>
            <description>Art elem should not contain Span kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Span').length == 0</test>
            <error>
                <message>Art elem contains Span kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="93"/>
            <description>Art elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>Art elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="94"/>
            <description>Art elem should not contain Reference kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Reference').length == 0</test>
            <error>
                <message>Art elem contains Reference kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="95"/>
            <description>Art elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>Art elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="96"/>
            <description>Art elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>Art elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="97"/>
            <description>Art elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>Art elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="98"/>
            <description>Art elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>Art elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="99"/>
            <description>Art elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>Art elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="100"/>
            <description>Art elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>Art elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="101"/>
            <description>Art elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>Art elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="102"/>
            <description>Art elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>Art elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="103"/>
            <description>Art elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>Art elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="104"/>
            <description>Art elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>Art elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="105"/>
            <description>Art elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>Art elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="106"/>
            <description>Art elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>Art elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="107"/>
            <description>Art elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>Art elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="108"/>
            <description>Art elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>Art elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="109"/>
            <description>Art elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>Art elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="110"/>
            <description>Art elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>Art elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEArt" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="111"/>
            <description>Art elem should not contain content item kid</description>
            <test>hasContentItems == false</test>
            <error>
                <message>Art elem contains content item kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="112"/>
            <description>Sect elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>Sect elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="113"/>
            <description>Sect elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>Sect elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="114"/>
            <description>Sect elem should contain zero or one H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length &lt;= 1</test>
            <error>
                <message>Sect contains more than one H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="115"/>
            <description>Sect elem should not contain Span kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Span').length == 0</test>
            <error>
                <message>Sect elem contains Span kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="116"/>
            <description>Sect elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>Sect elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="117"/>
            <description>Sect elem should not contain Reference kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Reference').length == 0</test>
            <error>
                <message>Sect elem contains Reference kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="118"/>
            <description>Sect elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>Sect elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="119"/>
            <description>Sect elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>Sect elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="120"/>
            <description>Sect elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>Sect elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="121"/>
            <description>Sect elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>Sect elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="122"/>
            <description>Sect elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>Sect elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="123"/>
            <description>Sect elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>Sect elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="124"/>
            <description>Sect elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>Sect elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="125"/>
            <description>Sect elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>Sect elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="126"/>
            <description>Sect elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>Sect elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="127"/>
            <description>Sect elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>Sect elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="128"/>
            <description>Sect elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>Sect elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="129"/>
            <description>Sect elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>Sect elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="130"/>
            <description>Sect elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>Sect elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="131"/>
            <description>Sect elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>Sect elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="132"/>
            <description>Sect elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>Sect elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="133"/>
            <description>Sect elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>Sect elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESect" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="134"/>
            <description>Sect elem should not contain content item kid</description>
            <test>hasContentItems == false</test>
            <error>
                <message>Sect elem contains content item kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="135"/>
            <description>TOC elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>TOC elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="136"/>
            <description>TOC elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>TOC elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="137"/>
            <description>TOC elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>TOC elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="138"/>
            <description>TOC elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>TOC elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="139"/>
            <description>TOC elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>TOC elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="140"/>
            <description>TOC elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>TOC elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="141"/>
            <description>TOC elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>TOC elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="142"/>
            <description>TOC elem should not contain Note kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Note').length == 0</test>
            <error>
                <message>TOC elem contains Note kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="143"/>
            <description>TOC elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>TOC elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="144"/>
            <description>TOC elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>TOC elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="145"/>
            <description>TOC elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>TOC elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="146"/>
            <description>TOC elem should not contain Lbl kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Lbl').length == 0</test>
            <error>
                <message>TOC elem contains Lbl kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="147"/>
            <description>TOC elem should not contain Span kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Span').length == 0</test>
            <error>
                <message>TOC elem contains Span kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="148"/>
            <description>TOC elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>TOC elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="149"/>
            <description>TOC elem should not contain Link kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Link').length == 0</test>
            <error>
                <message>TOC elem contains Link kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="150"/>
            <description>TOC elem should not contain Reference kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Reference').length == 0</test>
            <error>
                <message>TOC elem contains Reference kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="151"/>
            <description>TOC elem should not contain Annot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Annot').length == 0</test>
            <error>
                <message>TOC elem contains Annot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="152"/>
            <description>TOC elem should not contain Form kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Form').length == 0</test>
            <error>
                <message>TOC elem contains Form kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="153"/>
            <description>TOC elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>TOC elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="154"/>
            <description>TOC elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>TOC elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="155"/>
            <description>TOC elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>TOC elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="156"/>
            <description>TOC elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>TOC elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="157"/>
            <description>TOC elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>TOC elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="158"/>
            <description>TOC elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>TOC elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="159"/>
            <description>TOC elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>TOC elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="160"/>
            <description>TOC elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>TOC elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="161"/>
            <description>TOC elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>TOC elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="162"/>
            <description>TOC elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>TOC elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="163"/>
            <description>TOC elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>TOC elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="164"/>
            <description>TOC elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>TOC elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="165"/>
            <description>TOC elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>TOC elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="166"/>
            <description>TOC elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>TOC elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="167"/>
            <description>TOC elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>TOC elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="168"/>
            <description>TOC elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>TOC elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="169"/>
            <description>TOC elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>TOC elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="170"/>
            <description>TOC elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>TOC elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="171"/>
            <description>TOC elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>TOC elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="172"/>
            <description>TOC elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>TOC elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="173"/>
            <description>TOC elem should not contain Figure kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Figure').length == 0</test>
            <error>
                <message>TOC elem contains Figure kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="174"/>
            <description>TOC elem should not contain Formula kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Formula').length == 0</test>
            <error>
                <message>TOC elem contains Formula kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOC" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="175"/>
            <description>TOC elem should not contain content item kid</description>
            <test>hasContentItems == false</test>
            <error>
                <message>TOC elem contains content item kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="176"/>
            <description>TOCI elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>TOCI elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="177"/>
            <description>TOCI elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>TOCI elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="178"/>
            <description>TOCI elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>TOCI elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="179"/>
            <description>TOCI elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>TOCI elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="180"/>
            <description>TOCI elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>TOCI elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="181"/>
            <description>TOCI elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>TOCI elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="182"/>
            <description>TOCI elem should not contain Note kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Note').length == 0</test>
            <error>
                <message>TOCI elem contains Note kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="183"/>
            <description>TOCI elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>TOCI elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="184"/>
            <description>TOCI elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>TOCI elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="185"/>
            <description>TOCI elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>TOCI elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="186"/>
            <description>TOCI elem should not contain Span kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Span').length == 0</test>
            <error>
                <message>TOCI elem contains Span kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="187"/>
            <description>TOCI elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>TOCI elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="188"/>
            <description>TOCI elem should not contain Link kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Link').length == 0</test>
            <error>
                <message>TOCI elem contains Link kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="189"/>
            <description>TOCI elem should not contain Annot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Annot').length == 0</test>
            <error>
                <message>TOCI elem contains Annot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="190"/>
            <description>TOCI elem should not contain Form kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Form').length == 0</test>
            <error>
                <message>TOCI elem contains Form kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="191"/>
            <description>TOCI elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>TOCI elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="192"/>
            <description>TOCI elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>TOCI elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="193"/>
            <description>TOCI elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>TOCI elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="194"/>
            <description>TOCI elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>TOCI elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="195"/>
            <description>TOCI elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>TOCI elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="196"/>
            <description>TOCI elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>TOCI elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="197"/>
            <description>TOCI elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>TOCI elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="198"/>
            <description>TOCI elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>TOCI elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="199"/>
            <description>TOCI elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>TOCI elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="200"/>
            <description>TOCI elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>TOCI elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="201"/>
            <description>TOCI elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>TOCI elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="202"/>
            <description>TOCI elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>TOCI elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="203"/>
            <description>TOCI elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>TOCI elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="204"/>
            <description>TOCI elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>TOCI elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="205"/>
            <description>TOCI elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>TOCI elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="206"/>
            <description>TOCI elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>TOCI elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="207"/>
            <description>TOCI elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>TOCI elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="208"/>
            <description>TOCI elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>TOCI elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="209"/>
            <description>TOCI elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>TOCI elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="210"/>
            <description>TOCI elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>TOCI elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="211"/>
            <description>TOCI elem should not contain Figure kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Figure').length == 0</test>
            <error>
                <message>TOCI elem contains Figure kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="212"/>
            <description>TOCI elem should not contain Formula kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Formula').length == 0</test>
            <error>
                <message>TOCI elem contains Formula kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETOCI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="213"/>
            <description>TOCI elem should not contain content item kid</description>
            <test>hasContentItems == false</test>
            <error>
                <message>TOCI elem contains content item kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="214"/>
            <description>BlockQuote elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>BlockQuote elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="215"/>
            <description>BlockQuote elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>BlockQuote elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="216"/>
            <description>BlockQuote elem should contain zero or one H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length &lt;= 1</test>
            <error>
                <message>BlockQuote contains more than one H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="217"/>
            <description>BlockQuote elem should not contain Span kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Span').length == 0</test>
            <error>
                <message>BlockQuote elem contains Span kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="218"/>
            <description>BlockQuote elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>BlockQuote elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="219"/>
            <description>BlockQuote elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>BlockQuote elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="220"/>
            <description>BlockQuote elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>BlockQuote elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="221"/>
            <description>BlockQuote elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>BlockQuote elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="222"/>
            <description>BlockQuote elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>BlockQuote elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="223"/>
            <description>BlockQuote elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>BlockQuote elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="224"/>
            <description>BlockQuote elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>BlockQuote elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="225"/>
            <description>BlockQuote elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>BlockQuote elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="226"/>
            <description>BlockQuote elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>BlockQuote elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="227"/>
            <description>BlockQuote elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>BlockQuote elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="228"/>
            <description>BlockQuote elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>BlockQuote elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="229"/>
            <description>BlockQuote elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>BlockQuote elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="230"/>
            <description>BlockQuote elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>BlockQuote elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="231"/>
            <description>BlockQuote elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>BlockQuote elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="232"/>
            <description>BlockQuote elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>BlockQuote elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="233"/>
            <description>BlockQuote elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>BlockQuote elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="234"/>
            <description>BlockQuote elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>BlockQuote elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBlockQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="235"/>
            <description>BlockQuote elem should contain zero or one Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length &lt;= 1</test>
            <error>
                <message>BlockQuote contains more than one Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEPrivate" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="236"/>
            <description>Private elem should contain zero or one H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length &lt;= 1</test>
            <error>
                <message>Private contains more than one H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEPrivate" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="237"/>
            <description>Private elem should contain zero or one Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length &lt;= 1</test>
            <error>
                <message>Private contains more than one Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="238"/>
            <description>P elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>P elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="239"/>
            <description>P elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>P elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="240"/>
            <description>P elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>P elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="241"/>
            <description>P elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>P elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="242"/>
            <description>P elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>P elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="243"/>
            <description>P elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>P elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="244"/>
            <description>P elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>P elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="245"/>
            <description>P elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>P elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="246"/>
            <description>P elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>P elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="247"/>
            <description>P elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>P elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="248"/>
            <description>P elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>P elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="249"/>
            <description>P elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>P elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="250"/>
            <description>P elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>P elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="251"/>
            <description>P elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>P elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="252"/>
            <description>P elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>P elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="253"/>
            <description>P elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>P elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="254"/>
            <description>P elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>P elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="255"/>
            <description>P elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>P elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="256"/>
            <description>P elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>P elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="257"/>
            <description>P elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>P elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="258"/>
            <description>P elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>P elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="259"/>
            <description>P elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>P elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="260"/>
            <description>P elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>P elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="261"/>
            <description>P elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>P elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="262"/>
            <description>P elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>P elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="263"/>
            <description>P elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>P elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="264"/>
            <description>P elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>P elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SENote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="265"/>
            <description>Note elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>Note elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SENote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="266"/>
            <description>Note elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>Note elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SENote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="267"/>
            <description>Note elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>Note elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SENote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="268"/>
            <description>Note elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>Note elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SENote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="269"/>
            <description>Note elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>Note elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SENote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="270"/>
            <description>Note elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>Note elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SENote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="271"/>
            <description>Note elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>Note elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SENote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="272"/>
            <description>Note elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>Note elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SENote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="273"/>
            <description>Note elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>Note elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SENote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="274"/>
            <description>Note elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>Note elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SENote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="275"/>
            <description>Note elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>Note elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SENote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="276"/>
            <description>Note elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>Note elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SENote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="277"/>
            <description>Note elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>Note elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SENote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="278"/>
            <description>Note elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>Note elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SENote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="279"/>
            <description>Note elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>Note elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SENote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="280"/>
            <description>Note elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>Note elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SENote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="281"/>
            <description>Note elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>Note elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SENote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="282"/>
            <description>Note elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>Note elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="283"/>
            <description>Code elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>Code elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="284"/>
            <description>Code elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>Code elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="285"/>
            <description>Code elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>Code elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="286"/>
            <description>Code elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>Code elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="287"/>
            <description>Code elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>Code elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="288"/>
            <description>Code elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>Code elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="289"/>
            <description>Code elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>Code elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="290"/>
            <description>Code elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>Code elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="291"/>
            <description>Code elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>Code elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="292"/>
            <description>Code elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>Code elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="293"/>
            <description>Code elem should not contain Lbl kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Lbl').length == 0</test>
            <error>
                <message>Code elem contains Lbl kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="294"/>
            <description>Code elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>Code elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="295"/>
            <description>Code elem should not contain Form kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Form').length == 0</test>
            <error>
                <message>Code elem contains Form kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="296"/>
            <description>Code elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>Code elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="297"/>
            <description>Code elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>Code elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="298"/>
            <description>Code elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>Code elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="299"/>
            <description>Code elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>Code elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="300"/>
            <description>Code elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>Code elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="301"/>
            <description>Code elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>Code elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="302"/>
            <description>Code elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>Code elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="303"/>
            <description>Code elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>Code elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="304"/>
            <description>Code elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>Code elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="305"/>
            <description>Code elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>Code elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="306"/>
            <description>Code elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>Code elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="307"/>
            <description>Code elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>Code elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="308"/>
            <description>Code elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>Code elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="309"/>
            <description>Code elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>Code elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="310"/>
            <description>Code elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>Code elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="311"/>
            <description>Code elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>Code elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="312"/>
            <description>Code elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>Code elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="313"/>
            <description>Code elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>Code elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="314"/>
            <description>Code elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>Code elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="315"/>
            <description>Code elem should not contain Figure kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Figure').length == 0</test>
            <error>
                <message>Code elem contains Figure kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECode" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="316"/>
            <description>Code elem should not contain Formula kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Formula').length == 0</test>
            <error>
                <message>Code elem contains Formula kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="317"/>
            <description>Hn elem should not contain Document kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0)</test>
            <error>
                <message>Hn elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="318"/>
            <description>Hn elem should not contain Part kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0)</test>
            <error>
                <message>Hn elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="319"/>
            <description>Hn elem should contain zero or one Art kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length &lt;= 1)</test>
            <error>
                <message>Hn contains more than one Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="320"/>
            <description>Hn elem should not contain Div kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0)</test>
            <error>
                <message>Hn elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="321"/>
            <description>Hn elem should contain zero or one Sect kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length &lt;= 1)</test>
            <error>
                <message>Hn contains more than one Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="322"/>
            <description>Hn elem should not contain TOC kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0)</test>
            <error>
                <message>Hn elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="323"/>
            <description>Hn elem should not contain TOCI kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0)</test>
            <error>
                <message>Hn elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="324"/>
            <description>Hn elem should not contain BlockQuote kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0)</test>
            <error>
                <message>Hn elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="325"/>
            <description>Hn elem should not contain P kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0)</test>
            <error>
                <message>Hn elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="326"/>
            <description>Hn elem should not contain Hn kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0)</test>
            <error>
                <message>Hn elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="327"/>
            <description>Hn elem should not contain H kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0)</test>
            <error>
                <message>Hn elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="328"/>
            <description>Hn elem should not contain RB kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0)</test>
            <error>
                <message>Hn elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="329"/>
            <description>Hn elem should not contain RT kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0)</test>
            <error>
                <message>Hn elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="330"/>
            <description>Hn elem should not contain RP kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0)</test>
            <error>
                <message>Hn elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="331"/>
            <description>Hn elem should not contain WT kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0)</test>
            <error>
                <message>Hn elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="332"/>
            <description>Hn elem should not contain WP kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0)</test>
            <error>
                <message>Hn elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="333"/>
            <description>Hn elem should not contain Index kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0)</test>
            <error>
                <message>Hn elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="334"/>
            <description>Hn elem should not contain L kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0)</test>
            <error>
                <message>Hn elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="335"/>
            <description>Hn elem should not contain LI kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0)</test>
            <error>
                <message>Hn elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="336"/>
            <description>Hn elem should not contain LBody kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0)</test>
            <error>
                <message>Hn elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="337"/>
            <description>Hn elem should not contain Table kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0)</test>
            <error>
                <message>Hn elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="338"/>
            <description>Hn elem should not contain TR kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0)</test>
            <error>
                <message>Hn elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="339"/>
            <description>Hn elem should not contain TH kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0)</test>
            <error>
                <message>Hn elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="340"/>
            <description>Hn elem should not contain TD kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0)</test>
            <error>
                <message>Hn elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="341"/>
            <description>Hn elem should not contain THead kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0)</test>
            <error>
                <message>Hn elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="342"/>
            <description>Hn elem should not contain TBody kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0)</test>
            <error>
                <message>Hn elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="343"/>
            <description>Hn elem should not contain TFoot kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0)</test>
            <error>
                <message>Hn elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="PDStructElem" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="344"/>
            <description>Hn elem should not contain Caption kid</description>
            <test>(/^H[1-6]$/.test(standardType) == false) || (kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0)</test>
            <error>
                <message>Hn elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="345"/>
            <description>H elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>H elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="346"/>
            <description>H elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>H elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="347"/>
            <description>H elem should contain zero or one Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length &lt;= 1</test>
            <error>
                <message>H contains more than one Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="348"/>
            <description>H elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>H elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="349"/>
            <description>H elem should contain zero or one Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length &lt;= 1</test>
            <error>
                <message>H contains more than one Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="350"/>
            <description>H elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>H elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="351"/>
            <description>H elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>H elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="352"/>
            <description>H elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>H elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="353"/>
            <description>H elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>H elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="354"/>
            <description>H elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>H elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="355"/>
            <description>H elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>H elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="356"/>
            <description>H elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>H elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="357"/>
            <description>H elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>H elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="358"/>
            <description>H elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>H elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="359"/>
            <description>H elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>H elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="360"/>
            <description>H elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>H elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="361"/>
            <description>H elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>H elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="362"/>
            <description>H elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>H elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="363"/>
            <description>H elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>H elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="364"/>
            <description>H elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>H elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="365"/>
            <description>H elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>H elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="366"/>
            <description>H elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>H elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="367"/>
            <description>H elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>H elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="368"/>
            <description>H elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>H elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="369"/>
            <description>H elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>H elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="370"/>
            <description>H elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>H elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="371"/>
            <description>H elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>H elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="372"/>
            <description>H elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>H elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="373"/>
            <description>Lbl elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>Lbl elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="374"/>
            <description>Lbl elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>Lbl elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="375"/>
            <description>Lbl elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>Lbl elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="376"/>
            <description>Lbl elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>Lbl elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="377"/>
            <description>Lbl elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>Lbl elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="378"/>
            <description>Lbl elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>Lbl elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="379"/>
            <description>Lbl elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>Lbl elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="380"/>
            <description>Lbl elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>Lbl elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="381"/>
            <description>Lbl elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>Lbl elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="382"/>
            <description>Lbl elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>Lbl elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="383"/>
            <description>Lbl elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>Lbl elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="384"/>
            <description>Lbl elem should not contain Lbl kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Lbl').length == 0</test>
            <error>
                <message>Lbl elem contains Lbl kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="385"/>
            <description>Lbl elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>Lbl elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="386"/>
            <description>Lbl elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>Lbl elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="387"/>
            <description>Lbl elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>Lbl elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="388"/>
            <description>Lbl elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>Lbl elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="389"/>
            <description>Lbl elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>Lbl elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="390"/>
            <description>Lbl elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>Lbl elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="391"/>
            <description>Lbl elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>Lbl elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="392"/>
            <description>Lbl elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>Lbl elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="393"/>
            <description>Lbl elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>Lbl elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="394"/>
            <description>Lbl elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>Lbl elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="395"/>
            <description>Lbl elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>Lbl elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="396"/>
            <description>Lbl elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>Lbl elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="397"/>
            <description>Lbl elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>Lbl elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="398"/>
            <description>Lbl elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>Lbl elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="399"/>
            <description>Lbl elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>Lbl elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="400"/>
            <description>Lbl elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>Lbl elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELbl" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="401"/>
            <description>Lbl elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>Lbl elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="402"/>
            <description>Span elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>Span elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="403"/>
            <description>Span elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>Span elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="404"/>
            <description>Span elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>Span elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="405"/>
            <description>Span elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>Span elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="406"/>
            <description>Span elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>Span elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="407"/>
            <description>Span elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>Span elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="408"/>
            <description>Span elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>Span elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="409"/>
            <description>Span elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>Span elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="410"/>
            <description>Span elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>Span elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="411"/>
            <description>Span elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>Span elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="412"/>
            <description>Span elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>Span elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="413"/>
            <description>Span elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>Span elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="414"/>
            <description>Span elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>Span elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="415"/>
            <description>Span elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>Span elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="416"/>
            <description>Span elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>Span elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="417"/>
            <description>Span elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>Span elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="418"/>
            <description>Span elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>Span elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="419"/>
            <description>Span elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>Span elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="420"/>
            <description>Span elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>Span elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="421"/>
            <description>Span elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>Span elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="422"/>
            <description>Span elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>Span elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="423"/>
            <description>Span elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>Span elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="424"/>
            <description>Span elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>Span elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="425"/>
            <description>Span elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>Span elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="426"/>
            <description>Span elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>Span elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="427"/>
            <description>Span elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>Span elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="428"/>
            <description>Span elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>Span elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SESpan" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="429"/>
            <description>Span elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>Span elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="430"/>
            <description>Quote elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>Quote elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="431"/>
            <description>Quote elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>Quote elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="432"/>
            <description>Quote elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>Quote elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="433"/>
            <description>Quote elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>Quote elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="434"/>
            <description>Quote elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>Quote elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="435"/>
            <description>Quote elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>Quote elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="436"/>
            <description>Quote elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>Quote elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="437"/>
            <description>Quote elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>Quote elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="438"/>
            <description>Quote elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>Quote elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="439"/>
            <description>Quote elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>Quote elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="440"/>
            <description>Quote elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>Quote elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="441"/>
            <description>Quote elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>Quote elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="442"/>
            <description>Quote elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>Quote elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="443"/>
            <description>Quote elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>Quote elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="444"/>
            <description>Quote elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>Quote elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="445"/>
            <description>Quote elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>Quote elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="446"/>
            <description>Quote elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>Quote elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="447"/>
            <description>Quote elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>Quote elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="448"/>
            <description>Quote elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>Quote elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="449"/>
            <description>Quote elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>Quote elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="450"/>
            <description>Quote elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>Quote elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="451"/>
            <description>Quote elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>Quote elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="452"/>
            <description>Quote elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>Quote elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="453"/>
            <description>Quote elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>Quote elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="454"/>
            <description>Quote elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>Quote elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="455"/>
            <description>Quote elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>Quote elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="456"/>
            <description>Quote elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>Quote elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEQuote" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="457"/>
            <description>Quote elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>Quote elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELink" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="458"/>
            <description>Link elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>Link elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELink" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="459"/>
            <description>Link elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>Link elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELink" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="460"/>
            <description>Link elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>Link elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELink" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="461"/>
            <description>Link elem should not contain Link kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Link').length == 0</test>
            <error>
                <message>Link elem contains Link kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELink" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="462"/>
            <description>Link elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>Link elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELink" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="463"/>
            <description>Link elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>Link elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELink" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="464"/>
            <description>Link elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>Link elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELink" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="465"/>
            <description>Link elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>Link elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELink" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="466"/>
            <description>Link elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>Link elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELink" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="467"/>
            <description>Link elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>Link elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELink" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="468"/>
            <description>Link elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>Link elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELink" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="469"/>
            <description>Link elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>Link elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELink" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="470"/>
            <description>Link elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>Link elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELink" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="471"/>
            <description>Link elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>Link elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELink" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="472"/>
            <description>Link elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>Link elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELink" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="473"/>
            <description>Link elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>Link elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELink" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="474"/>
            <description>Link elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>Link elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELink" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="475"/>
            <description>Link elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>Link elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="476"/>
            <description>Reference elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>Reference elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="477"/>
            <description>Reference elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>Reference elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="478"/>
            <description>Reference elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>Reference elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="479"/>
            <description>Reference elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>Reference elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="480"/>
            <description>Reference elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>Reference elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="481"/>
            <description>Reference elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>Reference elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="482"/>
            <description>Reference elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>Reference elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="483"/>
            <description>Reference elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>Reference elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="484"/>
            <description>Reference elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>Reference elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="485"/>
            <description>Reference elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>Reference elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="486"/>
            <description>Reference elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>Reference elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="487"/>
            <description>Reference elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>Reference elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="488"/>
            <description>Reference elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>Reference elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="489"/>
            <description>Reference elem should not contain Reference kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Reference').length == 0</test>
            <error>
                <message>Reference elem contains Reference kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="490"/>
            <description>Reference elem should not contain Form kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Form').length == 0</test>
            <error>
                <message>Reference elem contains Form kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="491"/>
            <description>Reference elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>Reference elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="492"/>
            <description>Reference elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>Reference elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="493"/>
            <description>Reference elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>Reference elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="494"/>
            <description>Reference elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>Reference elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="495"/>
            <description>Reference elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>Reference elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="496"/>
            <description>Reference elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>Reference elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="497"/>
            <description>Reference elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>Reference elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="498"/>
            <description>Reference elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>Reference elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="499"/>
            <description>Reference elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>Reference elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="500"/>
            <description>Reference elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>Reference elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="501"/>
            <description>Reference elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>Reference elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="502"/>
            <description>Reference elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>Reference elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="503"/>
            <description>Reference elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>Reference elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="504"/>
            <description>Reference elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>Reference elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="505"/>
            <description>Reference elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>Reference elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="506"/>
            <description>Reference elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>Reference elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="507"/>
            <description>Reference elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>Reference elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="508"/>
            <description>Reference elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>Reference elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="509"/>
            <description>Reference elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>Reference elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEReference" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="510"/>
            <description>Reference elem should not contain Formula kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Formula').length == 0</test>
            <error>
                <message>Reference elem contains Formula kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEAnnot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="511"/>
            <description>Annot elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>Annot elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEAnnot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="512"/>
            <description>Annot elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>Annot elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEAnnot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="513"/>
            <description>Annot elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>Annot elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEAnnot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="514"/>
            <description>Annot elem should not contain Private kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Private').length == 0</test>
            <error>
                <message>Annot elem contains Private kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEAnnot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="515"/>
            <description>Annot elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>Annot elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEAnnot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="516"/>
            <description>Annot elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>Annot elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEAnnot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="517"/>
            <description>Annot elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>Annot elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEAnnot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="518"/>
            <description>Annot elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>Annot elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEAnnot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="519"/>
            <description>Annot elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>Annot elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEAnnot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="520"/>
            <description>Annot elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>Annot elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEAnnot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="521"/>
            <description>Annot elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>Annot elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEAnnot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="522"/>
            <description>Annot elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>Annot elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEAnnot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="523"/>
            <description>Annot elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>Annot elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEAnnot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="524"/>
            <description>Annot elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>Annot elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEAnnot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="525"/>
            <description>Annot elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>Annot elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEAnnot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="526"/>
            <description>Annot elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>Annot elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEAnnot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="527"/>
            <description>Annot elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>Annot elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEAnnot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="528"/>
            <description>Annot elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>Annot elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="529"/>
            <description>Form elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>Form elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="530"/>
            <description>Form elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>Form elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="531"/>
            <description>Form elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>Form elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="532"/>
            <description>Form elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>Form elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="533"/>
            <description>Form elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>Form elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="534"/>
            <description>Form elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>Form elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="535"/>
            <description>Form elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>Form elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="536"/>
            <description>Form elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>Form elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="537"/>
            <description>Form elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>Form elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="538"/>
            <description>Form elem should not contain Span kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Span').length == 0</test>
            <error>
                <message>Form elem contains Span kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="539"/>
            <description>Form elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>Form elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="540"/>
            <description>Form elem should not contain Link kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Link').length == 0</test>
            <error>
                <message>Form elem contains Link kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="541"/>
            <description>Form elem should not contain Annot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Annot').length == 0</test>
            <error>
                <message>Form elem contains Annot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="542"/>
            <description>Form elem should not contain Form kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Form').length == 0</test>
            <error>
                <message>Form elem contains Form kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="543"/>
            <description>Form elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>Form elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="544"/>
            <description>Form elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>Form elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="545"/>
            <description>Form elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>Form elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="546"/>
            <description>Form elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>Form elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="547"/>
            <description>Form elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>Form elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="548"/>
            <description>Form elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>Form elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="549"/>
            <description>Form elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>Form elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="550"/>
            <description>Form elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>Form elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="551"/>
            <description>Form elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>Form elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="552"/>
            <description>Form elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>Form elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="553"/>
            <description>Form elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>Form elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="554"/>
            <description>Form elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>Form elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="555"/>
            <description>Form elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>Form elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="556"/>
            <description>Form elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>Form elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="557"/>
            <description>Form elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>Form elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="558"/>
            <description>Form elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>Form elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEForm" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="559"/>
            <description>Form elem should contain zero or one Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length &lt;= 1</test>
            <error>
                <message>Form contains more than one Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="560"/>
            <description>Ruby elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>Ruby elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="561"/>
            <description>Ruby elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>Ruby elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="562"/>
            <description>Ruby elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>Ruby elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="563"/>
            <description>Ruby elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>Ruby elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="564"/>
            <description>Ruby elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>Ruby elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="565"/>
            <description>Ruby elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>Ruby elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="566"/>
            <description>Ruby elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>Ruby elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="567"/>
            <description>Ruby elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>Ruby elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="568"/>
            <description>Ruby elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>Ruby elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="569"/>
            <description>Ruby elem should not contain Note kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Note').length == 0</test>
            <error>
                <message>Ruby elem contains Note kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="570"/>
            <description>Ruby elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>Ruby elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="571"/>
            <description>Ruby elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>Ruby elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="572"/>
            <description>Ruby elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>Ruby elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="573"/>
            <description>Ruby elem should not contain Lbl kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Lbl').length == 0</test>
            <error>
                <message>Ruby elem contains Lbl kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="574"/>
            <description>Ruby elem should not contain Span kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Span').length == 0</test>
            <error>
                <message>Ruby elem contains Span kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="575"/>
            <description>Ruby elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>Ruby elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="576"/>
            <description>Ruby elem should not contain Link kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Link').length == 0</test>
            <error>
                <message>Ruby elem contains Link kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="577"/>
            <description>Ruby elem should not contain Reference kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Reference').length == 0</test>
            <error>
                <message>Ruby elem contains Reference kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="578"/>
            <description>Ruby elem should not contain Annot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Annot').length == 0</test>
            <error>
                <message>Ruby elem contains Annot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="579"/>
            <description>Ruby elem should not contain Form kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Form').length == 0</test>
            <error>
                <message>Ruby elem contains Form kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="580"/>
            <description>Ruby elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>Ruby elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="581"/>
            <description>Ruby elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>Ruby elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="582"/>
            <description>Ruby elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>Ruby elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="583"/>
            <description>Ruby elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>Ruby elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="584"/>
            <description>Ruby elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>Ruby elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="585"/>
            <description>Ruby elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>Ruby elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="586"/>
            <description>Ruby elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>Ruby elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="587"/>
            <description>Ruby elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>Ruby elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="588"/>
            <description>Ruby elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>Ruby elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="589"/>
            <description>Ruby elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>Ruby elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="590"/>
            <description>Ruby elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>Ruby elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="591"/>
            <description>Ruby elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>Ruby elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="592"/>
            <description>Ruby elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>Ruby elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="593"/>
            <description>Ruby elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>Ruby elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="594"/>
            <description>Ruby elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>Ruby elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="595"/>
            <description>Ruby elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>Ruby elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="596"/>
            <description>Ruby elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>Ruby elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="597"/>
            <description>Ruby elem should not contain Figure kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Figure').length == 0</test>
            <error>
                <message>Ruby elem contains Figure kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERuby" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="598"/>
            <description>Ruby elem should not contain Formula kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Formula').length == 0</test>
            <error>
                <message>Ruby elem contains Formula kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="599"/>
            <description>RB elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>RB elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="600"/>
            <description>RB elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>RB elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="601"/>
            <description>RB elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>RB elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="602"/>
            <description>RB elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>RB elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="603"/>
            <description>RB elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>RB elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="604"/>
            <description>RB elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>RB elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="605"/>
            <description>RB elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>RB elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="606"/>
            <description>RB elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>RB elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="607"/>
            <description>RB elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>RB elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="608"/>
            <description>RB elem should not contain Note kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Note').length == 0</test>
            <error>
                <message>RB elem contains Note kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="609"/>
            <description>RB elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>RB elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="610"/>
            <description>RB elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>RB elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="611"/>
            <description>RB elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>RB elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="612"/>
            <description>RB elem should not contain Lbl kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Lbl').length == 0</test>
            <error>
                <message>RB elem contains Lbl kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="613"/>
            <description>RB elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>RB elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="614"/>
            <description>RB elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>RB elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="615"/>
            <description>RB elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>RB elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="616"/>
            <description>RB elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>RB elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="617"/>
            <description>RB elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>RB elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="618"/>
            <description>RB elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>RB elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="619"/>
            <description>RB elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>RB elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="620"/>
            <description>RB elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>RB elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="621"/>
            <description>RB elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>RB elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="622"/>
            <description>RB elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>RB elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="623"/>
            <description>RB elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>RB elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="624"/>
            <description>RB elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>RB elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="625"/>
            <description>RB elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>RB elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="626"/>
            <description>RB elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>RB elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="627"/>
            <description>RB elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>RB elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="628"/>
            <description>RB elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>RB elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="629"/>
            <description>RB elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>RB elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="630"/>
            <description>RB elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>RB elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="631"/>
            <description>RB elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>RB elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="632"/>
            <description>RB elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>RB elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="633"/>
            <description>RB elem should not contain Figure kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Figure').length == 0</test>
            <error>
                <message>RB elem contains Figure kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERB" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="634"/>
            <description>RB elem should not contain Formula kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Formula').length == 0</test>
            <error>
                <message>RB elem contains Formula kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="635"/>
            <description>RT elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>RT elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="636"/>
            <description>RT elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>RT elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="637"/>
            <description>RT elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>RT elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="638"/>
            <description>RT elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>RT elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="639"/>
            <description>RT elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>RT elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="640"/>
            <description>RT elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>RT elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="641"/>
            <description>RT elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>RT elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="642"/>
            <description>RT elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>RT elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="643"/>
            <description>RT elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>RT elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="644"/>
            <description>RT elem should not contain Note kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Note').length == 0</test>
            <error>
                <message>RT elem contains Note kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="645"/>
            <description>RT elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>RT elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="646"/>
            <description>RT elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>RT elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="647"/>
            <description>RT elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>RT elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="648"/>
            <description>RT elem should not contain Lbl kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Lbl').length == 0</test>
            <error>
                <message>RT elem contains Lbl kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="649"/>
            <description>RT elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>RT elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="650"/>
            <description>RT elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>RT elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="651"/>
            <description>RT elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>RT elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="652"/>
            <description>RT elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>RT elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="653"/>
            <description>RT elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>RT elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="654"/>
            <description>RT elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>RT elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="655"/>
            <description>RT elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>RT elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="656"/>
            <description>RT elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>RT elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="657"/>
            <description>RT elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>RT elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="658"/>
            <description>RT elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>RT elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="659"/>
            <description>RT elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>RT elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="660"/>
            <description>RT elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>RT elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="661"/>
            <description>RT elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>RT elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="662"/>
            <description>RT elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>RT elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="663"/>
            <description>RT elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>RT elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="664"/>
            <description>RT elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>RT elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="665"/>
            <description>RT elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>RT elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="666"/>
            <description>RT elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>RT elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="667"/>
            <description>RT elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>RT elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="668"/>
            <description>RT elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>RT elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="669"/>
            <description>RT elem should not contain Figure kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Figure').length == 0</test>
            <error>
                <message>RT elem contains Figure kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="670"/>
            <description>RT elem should not contain Formula kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Formula').length == 0</test>
            <error>
                <message>RT elem contains Formula kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="671"/>
            <description>RP elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>RP elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="672"/>
            <description>RP elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>RP elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="673"/>
            <description>RP elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>RP elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="674"/>
            <description>RP elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>RP elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="675"/>
            <description>RP elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>RP elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="676"/>
            <description>RP elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>RP elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="677"/>
            <description>RP elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>RP elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="678"/>
            <description>RP elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>RP elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="679"/>
            <description>RP elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>RP elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="680"/>
            <description>RP elem should not contain Note kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Note').length == 0</test>
            <error>
                <message>RP elem contains Note kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="681"/>
            <description>RP elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>RP elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="682"/>
            <description>RP elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>RP elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="683"/>
            <description>RP elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>RP elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="684"/>
            <description>RP elem should not contain Lbl kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Lbl').length == 0</test>
            <error>
                <message>RP elem contains Lbl kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="685"/>
            <description>RP elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>RP elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="686"/>
            <description>RP elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>RP elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="687"/>
            <description>RP elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>RP elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="688"/>
            <description>RP elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>RP elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="689"/>
            <description>RP elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>RP elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="690"/>
            <description>RP elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>RP elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="691"/>
            <description>RP elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>RP elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="692"/>
            <description>RP elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>RP elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="693"/>
            <description>RP elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>RP elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="694"/>
            <description>RP elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>RP elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="695"/>
            <description>RP elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>RP elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="696"/>
            <description>RP elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>RP elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="697"/>
            <description>RP elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>RP elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="698"/>
            <description>RP elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>RP elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="699"/>
            <description>RP elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>RP elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="700"/>
            <description>RP elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>RP elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="701"/>
            <description>RP elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>RP elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="702"/>
            <description>RP elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>RP elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="703"/>
            <description>RP elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>RP elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="704"/>
            <description>RP elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>RP elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="705"/>
            <description>RP elem should not contain Figure kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Figure').length == 0</test>
            <error>
                <message>RP elem contains Figure kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SERP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="706"/>
            <description>RP elem should not contain Formula kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Formula').length == 0</test>
            <error>
                <message>RP elem contains Formula kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="707"/>
            <description>Warichu elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>Warichu elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="708"/>
            <description>Warichu elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>Warichu elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="709"/>
            <description>Warichu elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>Warichu elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="710"/>
            <description>Warichu elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>Warichu elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="711"/>
            <description>Warichu elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>Warichu elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="712"/>
            <description>Warichu elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>Warichu elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="713"/>
            <description>Warichu elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>Warichu elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="714"/>
            <description>Warichu elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>Warichu elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="715"/>
            <description>Warichu elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>Warichu elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="716"/>
            <description>Warichu elem should not contain Note kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Note').length == 0</test>
            <error>
                <message>Warichu elem contains Note kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="717"/>
            <description>Warichu elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>Warichu elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="718"/>
            <description>Warichu elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>Warichu elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="719"/>
            <description>Warichu elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>Warichu elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="720"/>
            <description>Warichu elem should not contain Lbl kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Lbl').length == 0</test>
            <error>
                <message>Warichu elem contains Lbl kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="721"/>
            <description>Warichu elem should not contain Span kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Span').length == 0</test>
            <error>
                <message>Warichu elem contains Span kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="722"/>
            <description>Warichu elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>Warichu elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="723"/>
            <description>Warichu elem should not contain Link kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Link').length == 0</test>
            <error>
                <message>Warichu elem contains Link kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="724"/>
            <description>Warichu elem should not contain Reference kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Reference').length == 0</test>
            <error>
                <message>Warichu elem contains Reference kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="725"/>
            <description>Warichu elem should not contain Annot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Annot').length == 0</test>
            <error>
                <message>Warichu elem contains Annot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="726"/>
            <description>Warichu elem should not contain Form kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Form').length == 0</test>
            <error>
                <message>Warichu elem contains Form kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="727"/>
            <description>Warichu elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>Warichu elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="728"/>
            <description>Warichu elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>Warichu elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="729"/>
            <description>Warichu elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>Warichu elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="730"/>
            <description>Warichu elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>Warichu elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="731"/>
            <description>Warichu elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>Warichu elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="732"/>
            <description>Warichu elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>Warichu elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="733"/>
            <description>Warichu elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>Warichu elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="734"/>
            <description>Warichu elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>Warichu elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="735"/>
            <description>Warichu elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>Warichu elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="736"/>
            <description>Warichu elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>Warichu elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="737"/>
            <description>Warichu elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>Warichu elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="738"/>
            <description>Warichu elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>Warichu elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="739"/>
            <description>Warichu elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>Warichu elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="740"/>
            <description>Warichu elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>Warichu elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="741"/>
            <description>Warichu elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>Warichu elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="742"/>
            <description>Warichu elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>Warichu elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="743"/>
            <description>Warichu elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>Warichu elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="744"/>
            <description>Warichu elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>Warichu elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="745"/>
            <description>Warichu elem should not contain Figure kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Figure').length == 0</test>
            <error>
                <message>Warichu elem contains Figure kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWarichu" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="746"/>
            <description>Warichu elem should not contain Formula kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Formula').length == 0</test>
            <error>
                <message>Warichu elem contains Formula kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="747"/>
            <description>WT elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>WT elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="748"/>
            <description>WT elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>WT elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="749"/>
            <description>WT elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>WT elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="750"/>
            <description>WT elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>WT elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="751"/>
            <description>WT elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>WT elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="752"/>
            <description>WT elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>WT elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="753"/>
            <description>WT elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>WT elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="754"/>
            <description>WT elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>WT elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="755"/>
            <description>WT elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>WT elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="756"/>
            <description>WT elem should not contain Note kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Note').length == 0</test>
            <error>
                <message>WT elem contains Note kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="757"/>
            <description>WT elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>WT elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="758"/>
            <description>WT elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>WT elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="759"/>
            <description>WT elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>WT elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="760"/>
            <description>WT elem should not contain Lbl kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Lbl').length == 0</test>
            <error>
                <message>WT elem contains Lbl kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="761"/>
            <description>WT elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>WT elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="762"/>
            <description>WT elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>WT elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="763"/>
            <description>WT elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>WT elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="764"/>
            <description>WT elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>WT elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="765"/>
            <description>WT elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>WT elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="766"/>
            <description>WT elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>WT elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="767"/>
            <description>WT elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>WT elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="768"/>
            <description>WT elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>WT elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="769"/>
            <description>WT elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>WT elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="770"/>
            <description>WT elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>WT elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="771"/>
            <description>WT elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>WT elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="772"/>
            <description>WT elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>WT elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="773"/>
            <description>WT elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>WT elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="774"/>
            <description>WT elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>WT elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="775"/>
            <description>WT elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>WT elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="776"/>
            <description>WT elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>WT elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="777"/>
            <description>WT elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>WT elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="778"/>
            <description>WT elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>WT elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="779"/>
            <description>WT elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>WT elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="780"/>
            <description>WT elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>WT elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="781"/>
            <description>WT elem should not contain Figure kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Figure').length == 0</test>
            <error>
                <message>WT elem contains Figure kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWT" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="782"/>
            <description>WT elem should not contain Formula kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Formula').length == 0</test>
            <error>
                <message>WT elem contains Formula kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="783"/>
            <description>WP elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>WP elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="784"/>
            <description>WP elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>WP elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="785"/>
            <description>WP elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>WP elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="786"/>
            <description>WP elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>WP elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="787"/>
            <description>WP elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>WP elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="788"/>
            <description>WP elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>WP elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="789"/>
            <description>WP elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>WP elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="790"/>
            <description>WP elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>WP elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="791"/>
            <description>WP elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>WP elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="792"/>
            <description>WP elem should not contain Note kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Note').length == 0</test>
            <error>
                <message>WP elem contains Note kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="793"/>
            <description>WP elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>WP elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="794"/>
            <description>WP elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>WP elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="795"/>
            <description>WP elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>WP elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="796"/>
            <description>WP elem should not contain Lbl kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Lbl').length == 0</test>
            <error>
                <message>WP elem contains Lbl kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="797"/>
            <description>WP elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>WP elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="798"/>
            <description>WP elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>WP elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="799"/>
            <description>WP elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>WP elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="800"/>
            <description>WP elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>WP elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="801"/>
            <description>WP elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>WP elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="802"/>
            <description>WP elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>WP elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="803"/>
            <description>WP elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>WP elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="804"/>
            <description>WP elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>WP elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="805"/>
            <description>WP elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>WP elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="806"/>
            <description>WP elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>WP elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="807"/>
            <description>WP elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>WP elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="808"/>
            <description>WP elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>WP elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="809"/>
            <description>WP elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>WP elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="810"/>
            <description>WP elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>WP elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="811"/>
            <description>WP elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>WP elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="812"/>
            <description>WP elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>WP elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="813"/>
            <description>WP elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>WP elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="814"/>
            <description>WP elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>WP elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="815"/>
            <description>WP elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>WP elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="816"/>
            <description>WP elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>WP elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="817"/>
            <description>WP elem should not contain Figure kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Figure').length == 0</test>
            <error>
                <message>WP elem contains Figure kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEWP" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="818"/>
            <description>WP elem should not contain Formula kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Formula').length == 0</test>
            <error>
                <message>WP elem contains Formula kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="819"/>
            <description>Index elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>Index elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="820"/>
            <description>Index elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>Index elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="821"/>
            <description>Index elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>Index elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="822"/>
            <description>Index elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>Index elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="823"/>
            <description>Index elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>Index elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="824"/>
            <description>Index elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>Index elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="825"/>
            <description>Index elem should not contain Lbl kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Lbl').length == 0</test>
            <error>
                <message>Index elem contains Lbl kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="826"/>
            <description>Index elem should not contain Span kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Span').length == 0</test>
            <error>
                <message>Index elem contains Span kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="827"/>
            <description>Index elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>Index elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="828"/>
            <description>Index elem should not contain Link kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Link').length == 0</test>
            <error>
                <message>Index elem contains Link kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="829"/>
            <description>Index elem should not contain Form kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Form').length == 0</test>
            <error>
                <message>Index elem contains Form kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="830"/>
            <description>Index elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>Index elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="831"/>
            <description>Index elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>Index elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="832"/>
            <description>Index elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>Index elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="833"/>
            <description>Index elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>Index elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="834"/>
            <description>Index elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>Index elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="835"/>
            <description>Index elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>Index elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="836"/>
            <description>Index elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>Index elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="837"/>
            <description>Index elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>Index elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="838"/>
            <description>Index elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>Index elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="839"/>
            <description>Index elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>Index elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="840"/>
            <description>Index elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>Index elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="841"/>
            <description>Index elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>Index elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="842"/>
            <description>Index elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>Index elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="843"/>
            <description>Index elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>Index elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="844"/>
            <description>Index elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>Index elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="845"/>
            <description>Index elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>Index elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="846"/>
            <description>Index elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>Index elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEIndex" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="847"/>
            <description>Index elem should not contain content item kid</description>
            <test>hasContentItems == false</test>
            <error>
                <message>Index elem contains content item kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="848"/>
            <description>L elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>L elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="849"/>
            <description>L elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>L elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="850"/>
            <description>L elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>L elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="851"/>
            <description>L elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>L elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="852"/>
            <description>L elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>L elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="853"/>
            <description>L elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>L elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="854"/>
            <description>L elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>L elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="855"/>
            <description>L elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>L elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="856"/>
            <description>L elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>L elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="857"/>
            <description>L elem should not contain Note kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Note').length == 0</test>
            <error>
                <message>L elem contains Note kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="858"/>
            <description>L elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>L elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="859"/>
            <description>L elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>L elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="860"/>
            <description>L elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>L elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="861"/>
            <description>L elem should not contain Lbl kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Lbl').length == 0</test>
            <error>
                <message>L elem contains Lbl kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="862"/>
            <description>L elem should not contain Span kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Span').length == 0</test>
            <error>
                <message>L elem contains Span kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="863"/>
            <description>L elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>L elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="864"/>
            <description>L elem should not contain Link kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Link').length == 0</test>
            <error>
                <message>L elem contains Link kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="865"/>
            <description>L elem should not contain Reference kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Reference').length == 0</test>
            <error>
                <message>L elem contains Reference kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="866"/>
            <description>L elem should not contain Annot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Annot').length == 0</test>
            <error>
                <message>L elem contains Annot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="867"/>
            <description>L elem should not contain Form kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Form').length == 0</test>
            <error>
                <message>L elem contains Form kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="868"/>
            <description>L elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>L elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="869"/>
            <description>L elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>L elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="870"/>
            <description>L elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>L elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="871"/>
            <description>L elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>L elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="872"/>
            <description>L elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>L elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="873"/>
            <description>L elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>L elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="874"/>
            <description>L elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>L elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="875"/>
            <description>L elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>L elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="876"/>
            <description>L elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>L elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="877"/>
            <description>L elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>L elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="878"/>
            <description>L elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>L elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="879"/>
            <description>L elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>L elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="880"/>
            <description>L elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>L elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="881"/>
            <description>L elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>L elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="882"/>
            <description>L elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>L elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="883"/>
            <description>L elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>L elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="884"/>
            <description>L elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>L elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="885"/>
            <description>L elem should contain zero or one Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length &lt;= 1</test>
            <error>
                <message>L contains more than one Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="886"/>
            <description>L elem should not contain Figure kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Figure').length == 0</test>
            <error>
                <message>L elem contains Figure kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="887"/>
            <description>L elem should not contain Formula kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Formula').length == 0</test>
            <error>
                <message>L elem contains Formula kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEL" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="888"/>
            <description>L elem should not contain content item kid</description>
            <test>hasContentItems == false</test>
            <error>
                <message>L elem contains content item kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="889"/>
            <description>LI elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>LI elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="890"/>
            <description>LI elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>LI elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="891"/>
            <description>LI elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>LI elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="892"/>
            <description>LI elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>LI elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="893"/>
            <description>LI elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>LI elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="894"/>
            <description>LI elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>LI elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="895"/>
            <description>LI elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>LI elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="896"/>
            <description>LI elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>LI elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="897"/>
            <description>LI elem should not contain Note kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Note').length == 0</test>
            <error>
                <message>LI elem contains Note kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="898"/>
            <description>LI elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>LI elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="899"/>
            <description>LI elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>LI elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="900"/>
            <description>LI elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>LI elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="901"/>
            <description>LI elem should not contain Span kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Span').length == 0</test>
            <error>
                <message>LI elem contains Span kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="902"/>
            <description>LI elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>LI elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="903"/>
            <description>LI elem should not contain Link kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Link').length == 0</test>
            <error>
                <message>LI elem contains Link kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="904"/>
            <description>LI elem should not contain Reference kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Reference').length == 0</test>
            <error>
                <message>LI elem contains Reference kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="905"/>
            <description>LI elem should not contain Annot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Annot').length == 0</test>
            <error>
                <message>LI elem contains Annot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="906"/>
            <description>LI elem should not contain Form kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Form').length == 0</test>
            <error>
                <message>LI elem contains Form kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="907"/>
            <description>LI elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>LI elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="908"/>
            <description>LI elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>LI elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="909"/>
            <description>LI elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>LI elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="910"/>
            <description>LI elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>LI elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="911"/>
            <description>LI elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>LI elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="912"/>
            <description>LI elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>LI elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="913"/>
            <description>LI elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>LI elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="914"/>
            <description>LI elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>LI elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="915"/>
            <description>LI elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>LI elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="916"/>
            <description>LI elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>LI elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="917"/>
            <description>LI elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>LI elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="918"/>
            <description>LI elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>LI elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="919"/>
            <description>LI elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>LI elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="920"/>
            <description>LI elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>LI elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="921"/>
            <description>LI elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>LI elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="922"/>
            <description>LI elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>LI elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="923"/>
            <description>LI elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>LI elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="924"/>
            <description>LI elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>LI elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="925"/>
            <description>LI elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>LI elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="926"/>
            <description>LI elem should not contain Figure kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Figure').length == 0</test>
            <error>
                <message>LI elem contains Figure kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELI" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="927"/>
            <description>LI elem should not contain Formula kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Formula').length == 0</test>
            <error>
                <message>LI elem contains Formula kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="928"/>
            <description>LBody elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>LBody elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="929"/>
            <description>LBody elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>LBody elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="930"/>
            <description>LBody elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>LBody elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="931"/>
            <description>LBody elem should contain zero or one H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length &lt;= 1</test>
            <error>
                <message>LBody contains more than one H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="932"/>
            <description>LBody elem should not contain Lbl kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Lbl').length == 0</test>
            <error>
                <message>LBody elem contains Lbl kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="933"/>
            <description>LBody elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>LBody elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="934"/>
            <description>LBody elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>LBody elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="935"/>
            <description>LBody elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>LBody elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="936"/>
            <description>LBody elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>LBody elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="937"/>
            <description>LBody elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>LBody elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="938"/>
            <description>LBody elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>LBody elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="939"/>
            <description>LBody elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>LBody elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="940"/>
            <description>LBody elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>LBody elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="941"/>
            <description>LBody elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>LBody elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="942"/>
            <description>LBody elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>LBody elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="943"/>
            <description>LBody elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>LBody elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="944"/>
            <description>LBody elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>LBody elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="945"/>
            <description>LBody elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>LBody elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SELBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="946"/>
            <description>LBody elem should contain zero or one Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length &lt;= 1</test>
            <error>
                <message>LBody contains more than one Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="947"/>
            <description>BibEntry elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>BibEntry elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="948"/>
            <description>BibEntry elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>BibEntry elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="949"/>
            <description>BibEntry elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>BibEntry elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="950"/>
            <description>BibEntry elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>BibEntry elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="951"/>
            <description>BibEntry elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>BibEntry elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="952"/>
            <description>BibEntry elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>BibEntry elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="953"/>
            <description>BibEntry elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>BibEntry elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="954"/>
            <description>BibEntry elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>BibEntry elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="955"/>
            <description>BibEntry elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>BibEntry elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="956"/>
            <description>BibEntry elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>BibEntry elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="957"/>
            <description>BibEntry elem should not contain Form kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Form').length == 0</test>
            <error>
                <message>BibEntry elem contains Form kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="958"/>
            <description>BibEntry elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>BibEntry elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="959"/>
            <description>BibEntry elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>BibEntry elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="960"/>
            <description>BibEntry elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>BibEntry elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="961"/>
            <description>BibEntry elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>BibEntry elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="962"/>
            <description>BibEntry elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>BibEntry elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="963"/>
            <description>BibEntry elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>BibEntry elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="964"/>
            <description>BibEntry elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>BibEntry elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="965"/>
            <description>BibEntry elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>BibEntry elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="966"/>
            <description>BibEntry elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>BibEntry elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="967"/>
            <description>BibEntry elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>BibEntry elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="968"/>
            <description>BibEntry elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>BibEntry elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="969"/>
            <description>BibEntry elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>BibEntry elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="970"/>
            <description>BibEntry elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>BibEntry elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="971"/>
            <description>BibEntry elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>BibEntry elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="972"/>
            <description>BibEntry elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>BibEntry elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="973"/>
            <description>BibEntry elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>BibEntry elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="974"/>
            <description>BibEntry elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>BibEntry elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="975"/>
            <description>BibEntry elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>BibEntry elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="976"/>
            <description>BibEntry elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>BibEntry elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="977"/>
            <description>BibEntry elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>BibEntry elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEBibEntry" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="978"/>
            <description>BibEntry elem should not contain Formula kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Formula').length == 0</test>
            <error>
                <message>BibEntry elem contains Formula kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="979"/>
            <description>Table elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>Table elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="980"/>
            <description>Table elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>Table elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="981"/>
            <description>Table elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>Table elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="982"/>
            <description>Table elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>Table elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="983"/>
            <description>Table elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>Table elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="984"/>
            <description>Table elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>Table elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="985"/>
            <description>Table elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>Table elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="986"/>
            <description>Table elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>Table elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="987"/>
            <description>Table elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>Table elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="988"/>
            <description>Table elem should not contain Note kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Note').length == 0</test>
            <error>
                <message>Table elem contains Note kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="989"/>
            <description>Table elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>Table elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="990"/>
            <description>Table elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>Table elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="991"/>
            <description>Table elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>Table elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="992"/>
            <description>Table elem should not contain Lbl kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Lbl').length == 0</test>
            <error>
                <message>Table elem contains Lbl kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="993"/>
            <description>Table elem should not contain Span kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Span').length == 0</test>
            <error>
                <message>Table elem contains Span kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="994"/>
            <description>Table elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>Table elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="995"/>
            <description>Table elem should not contain Link kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Link').length == 0</test>
            <error>
                <message>Table elem contains Link kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="996"/>
            <description>Table elem should not contain Reference kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Reference').length == 0</test>
            <error>
                <message>Table elem contains Reference kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="997"/>
            <description>Table elem should not contain Annot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Annot').length == 0</test>
            <error>
                <message>Table elem contains Annot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="998"/>
            <description>Table elem should not contain Form kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Form').length == 0</test>
            <error>
                <message>Table elem contains Form kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="999"/>
            <description>Table elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>Table elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1000"/>
            <description>Table elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>Table elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1001"/>
            <description>Table elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>Table elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1002"/>
            <description>Table elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>Table elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1003"/>
            <description>Table elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>Table elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1004"/>
            <description>Table elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>Table elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1005"/>
            <description>Table elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>Table elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1006"/>
            <description>Table elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>Table elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1007"/>
            <description>Table elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>Table elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1008"/>
            <description>Table elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>Table elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1009"/>
            <description>Table elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>Table elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1010"/>
            <description>Table elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>Table elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1011"/>
            <description>Table elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>Table elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1012"/>
            <description>Table elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>Table elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1013"/>
            <description>Table elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>Table elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1014"/>
            <description>Table elem should contain zero or one THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length &lt;= 1</test>
            <error>
                <message>Table contains more than one THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1015"/>
            <description>Table elem should contain zero or one TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length &lt;= 1</test>
            <error>
                <message>Table contains more than one TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1016"/>
            <description>Table elem should contain zero or one Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length &lt;= 1</test>
            <error>
                <message>Table contains more than one Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1017"/>
            <description>Table elem should not contain Figure kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Figure').length == 0</test>
            <error>
                <message>Table elem contains Figure kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1018"/>
            <description>Table elem should not contain Formula kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Formula').length == 0</test>
            <error>
                <message>Table elem contains Formula kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETable" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1019"/>
            <description>Table elem should not contain content item kid</description>
            <test>hasContentItems == false</test>
            <error>
                <message>Table elem contains content item kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1020"/>
            <description>TR elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>TR elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1021"/>
            <description>TR elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>TR elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1022"/>
            <description>TR elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>TR elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1023"/>
            <description>TR elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>TR elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1024"/>
            <description>TR elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>TR elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1025"/>
            <description>TR elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>TR elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1026"/>
            <description>TR elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>TR elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1027"/>
            <description>TR elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>TR elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1028"/>
            <description>TR elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>TR elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1029"/>
            <description>TR elem should not contain Note kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Note').length == 0</test>
            <error>
                <message>TR elem contains Note kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1030"/>
            <description>TR elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>TR elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1031"/>
            <description>TR elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>TR elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1032"/>
            <description>TR elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>TR elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1033"/>
            <description>TR elem should not contain Lbl kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Lbl').length == 0</test>
            <error>
                <message>TR elem contains Lbl kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1034"/>
            <description>TR elem should not contain Span kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Span').length == 0</test>
            <error>
                <message>TR elem contains Span kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1035"/>
            <description>TR elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>TR elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1036"/>
            <description>TR elem should not contain Link kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Link').length == 0</test>
            <error>
                <message>TR elem contains Link kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1037"/>
            <description>TR elem should not contain Reference kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Reference').length == 0</test>
            <error>
                <message>TR elem contains Reference kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1038"/>
            <description>TR elem should not contain Annot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Annot').length == 0</test>
            <error>
                <message>TR elem contains Annot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1039"/>
            <description>TR elem should not contain Form kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Form').length == 0</test>
            <error>
                <message>TR elem contains Form kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1040"/>
            <description>TR elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>TR elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1041"/>
            <description>TR elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>TR elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1042"/>
            <description>TR elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>TR elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1043"/>
            <description>TR elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>TR elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1044"/>
            <description>TR elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>TR elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1045"/>
            <description>TR elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>TR elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1046"/>
            <description>TR elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>TR elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1047"/>
            <description>TR elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>TR elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1048"/>
            <description>TR elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>TR elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1049"/>
            <description>TR elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>TR elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1050"/>
            <description>TR elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>TR elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1051"/>
            <description>TR elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>TR elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1052"/>
            <description>TR elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>TR elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1053"/>
            <description>TR elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>TR elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1054"/>
            <description>TR elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>TR elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1055"/>
            <description>TR elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>TR elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1056"/>
            <description>TR elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>TR elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1057"/>
            <description>TR elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>TR elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1058"/>
            <description>TR elem should not contain Figure kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Figure').length == 0</test>
            <error>
                <message>TR elem contains Figure kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1059"/>
            <description>TR elem should not contain Formula kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Formula').length == 0</test>
            <error>
                <message>TR elem contains Formula kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETR" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1060"/>
            <description>TR elem should not contain content item kid</description>
            <test>hasContentItems == false</test>
            <error>
                <message>TR elem contains content item kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1061"/>
            <description>TH elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>TH elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1062"/>
            <description>TH elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>TH elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1063"/>
            <description>TH elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>TH elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1064"/>
            <description>TH elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>TH elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1065"/>
            <description>TH elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>TH elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1066"/>
            <description>TH elem should contain zero or one H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length &lt;= 1</test>
            <error>
                <message>TH contains more than one H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1067"/>
            <description>TH elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>TH elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1068"/>
            <description>TH elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>TH elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1069"/>
            <description>TH elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>TH elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1070"/>
            <description>TH elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>TH elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1071"/>
            <description>TH elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>TH elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1072"/>
            <description>TH elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>TH elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1073"/>
            <description>TH elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>TH elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1074"/>
            <description>TH elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>TH elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1075"/>
            <description>TH elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>TH elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1076"/>
            <description>TH elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>TH elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1077"/>
            <description>TH elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>TH elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1078"/>
            <description>TH elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>TH elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1079"/>
            <description>TH elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>TH elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETH" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1080"/>
            <description>TH elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>TH elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETD" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1081"/>
            <description>TD elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>TD elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETD" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1082"/>
            <description>TD elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>TD elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETD" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1083"/>
            <description>TD elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>TD elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETD" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1084"/>
            <description>TD elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>TD elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETD" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1085"/>
            <description>TD elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>TD elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETD" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1086"/>
            <description>TD elem should contain zero or one H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length &lt;= 1</test>
            <error>
                <message>TD contains more than one H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETD" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1087"/>
            <description>TD elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>TD elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETD" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1088"/>
            <description>TD elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>TD elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETD" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1089"/>
            <description>TD elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>TD elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETD" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1090"/>
            <description>TD elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>TD elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETD" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1091"/>
            <description>TD elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>TD elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETD" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1092"/>
            <description>TD elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>TD elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETD" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1093"/>
            <description>TD elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>TD elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETD" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1094"/>
            <description>TD elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>TD elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETD" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1095"/>
            <description>TD elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>TD elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETD" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1096"/>
            <description>TD elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>TD elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETD" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1097"/>
            <description>TD elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>TD elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETD" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1098"/>
            <description>TD elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>TD elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETD" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1099"/>
            <description>TD elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>TD elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETD" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1100"/>
            <description>TD elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>TD elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1101"/>
            <description>THead elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>THead elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1102"/>
            <description>THead elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>THead elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1103"/>
            <description>THead elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>THead elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1104"/>
            <description>THead elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>THead elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1105"/>
            <description>THead elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>THead elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1106"/>
            <description>THead elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>THead elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1107"/>
            <description>THead elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>THead elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1108"/>
            <description>THead elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>THead elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1109"/>
            <description>THead elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>THead elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1110"/>
            <description>THead elem should not contain Note kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Note').length == 0</test>
            <error>
                <message>THead elem contains Note kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1111"/>
            <description>THead elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>THead elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1112"/>
            <description>THead elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>THead elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1113"/>
            <description>THead elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>THead elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1114"/>
            <description>THead elem should not contain Lbl kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Lbl').length == 0</test>
            <error>
                <message>THead elem contains Lbl kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1115"/>
            <description>THead elem should not contain Span kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Span').length == 0</test>
            <error>
                <message>THead elem contains Span kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1116"/>
            <description>THead elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>THead elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1117"/>
            <description>THead elem should not contain Link kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Link').length == 0</test>
            <error>
                <message>THead elem contains Link kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1118"/>
            <description>THead elem should not contain Reference kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Reference').length == 0</test>
            <error>
                <message>THead elem contains Reference kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1119"/>
            <description>THead elem should not contain Annot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Annot').length == 0</test>
            <error>
                <message>THead elem contains Annot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1120"/>
            <description>THead elem should not contain Form kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Form').length == 0</test>
            <error>
                <message>THead elem contains Form kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1121"/>
            <description>THead elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>THead elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1122"/>
            <description>THead elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>THead elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1123"/>
            <description>THead elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>THead elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1124"/>
            <description>THead elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>THead elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1125"/>
            <description>THead elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>THead elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1126"/>
            <description>THead elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>THead elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1127"/>
            <description>THead elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>THead elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1128"/>
            <description>THead elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>THead elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1129"/>
            <description>THead elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>THead elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1130"/>
            <description>THead elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>THead elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1131"/>
            <description>THead elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>THead elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1132"/>
            <description>THead elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>THead elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1133"/>
            <description>THead elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>THead elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1134"/>
            <description>THead elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>THead elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1135"/>
            <description>THead elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>THead elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1136"/>
            <description>THead elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>THead elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1137"/>
            <description>THead elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>THead elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1138"/>
            <description>THead elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>THead elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1139"/>
            <description>THead elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>THead elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1140"/>
            <description>THead elem should not contain Figure kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Figure').length == 0</test>
            <error>
                <message>THead elem contains Figure kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1141"/>
            <description>THead elem should not contain Formula kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Formula').length == 0</test>
            <error>
                <message>THead elem contains Formula kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETHead" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1142"/>
            <description>THead elem should not contain content item kid</description>
            <test>hasContentItems == false</test>
            <error>
                <message>THead elem contains content item kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1143"/>
            <description>TBody elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>TBody elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1144"/>
            <description>TBody elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>TBody elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1145"/>
            <description>TBody elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>TBody elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1146"/>
            <description>TBody elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>TBody elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1147"/>
            <description>TBody elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>TBody elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1148"/>
            <description>TBody elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>TBody elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1149"/>
            <description>TBody elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>TBody elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1150"/>
            <description>TBody elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>TBody elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1151"/>
            <description>TBody elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>TBody elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1152"/>
            <description>TBody elem should not contain Note kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Note').length == 0</test>
            <error>
                <message>TBody elem contains Note kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1153"/>
            <description>TBody elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>TBody elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1154"/>
            <description>TBody elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>TBody elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1155"/>
            <description>TBody elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>TBody elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1156"/>
            <description>TBody elem should not contain Lbl kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Lbl').length == 0</test>
            <error>
                <message>TBody elem contains Lbl kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1157"/>
            <description>TBody elem should not contain Span kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Span').length == 0</test>
            <error>
                <message>TBody elem contains Span kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1158"/>
            <description>TBody elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>TBody elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1159"/>
            <description>TBody elem should not contain Link kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Link').length == 0</test>
            <error>
                <message>TBody elem contains Link kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1160"/>
            <description>TBody elem should not contain Reference kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Reference').length == 0</test>
            <error>
                <message>TBody elem contains Reference kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1161"/>
            <description>TBody elem should not contain Annot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Annot').length == 0</test>
            <error>
                <message>TBody elem contains Annot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1162"/>
            <description>TBody elem should not contain Form kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Form').length == 0</test>
            <error>
                <message>TBody elem contains Form kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1163"/>
            <description>TBody elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>TBody elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1164"/>
            <description>TBody elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>TBody elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1165"/>
            <description>TBody elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>TBody elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1166"/>
            <description>TBody elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>TBody elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1167"/>
            <description>TBody elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>TBody elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1168"/>
            <description>TBody elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>TBody elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1169"/>
            <description>TBody elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>TBody elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1170"/>
            <description>TBody elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>TBody elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1171"/>
            <description>TBody elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>TBody elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1172"/>
            <description>TBody elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>TBody elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1173"/>
            <description>TBody elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>TBody elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1174"/>
            <description>TBody elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>TBody elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1175"/>
            <description>TBody elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>TBody elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1176"/>
            <description>TBody elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>TBody elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1177"/>
            <description>TBody elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>TBody elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1178"/>
            <description>TBody elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>TBody elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1179"/>
            <description>TBody elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>TBody elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1180"/>
            <description>TBody elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>TBody elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1181"/>
            <description>TBody elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>TBody elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1182"/>
            <description>TBody elem should not contain Figure kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Figure').length == 0</test>
            <error>
                <message>TBody elem contains Figure kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1183"/>
            <description>TBody elem should not contain Formula kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Formula').length == 0</test>
            <error>
                <message>TBody elem contains Formula kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETBody" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1184"/>
            <description>TBody elem should not contain content item kid</description>
            <test>hasContentItems == false</test>
            <error>
                <message>TBody elem contains content item kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1185"/>
            <description>TFoot elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>TFoot elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1186"/>
            <description>TFoot elem should not contain Part kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Part').length == 0</test>
            <error>
                <message>TFoot elem contains Part kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1187"/>
            <description>TFoot elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>TFoot elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1188"/>
            <description>TFoot elem should not contain Div kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Div').length == 0</test>
            <error>
                <message>TFoot elem contains Div kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1189"/>
            <description>TFoot elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>TFoot elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1190"/>
            <description>TFoot elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>TFoot elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1191"/>
            <description>TFoot elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>TFoot elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1192"/>
            <description>TFoot elem should not contain BlockQuote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BlockQuote').length == 0</test>
            <error>
                <message>TFoot elem contains BlockQuote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1193"/>
            <description>TFoot elem should not contain P kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'P').length == 0</test>
            <error>
                <message>TFoot elem contains P kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1194"/>
            <description>TFoot elem should not contain Note kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Note').length == 0</test>
            <error>
                <message>TFoot elem contains Note kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1195"/>
            <description>TFoot elem should not contain Code kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Code').length == 0</test>
            <error>
                <message>TFoot elem contains Code kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1196"/>
            <description>TFoot elem should not contain Hn kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; /^H[1-6]$/.test(elem)).length == 0</test>
            <error>
                <message>TFoot elem contains Hn kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1197"/>
            <description>TFoot elem should not contain H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length == 0</test>
            <error>
                <message>TFoot elem contains H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1198"/>
            <description>TFoot elem should not contain Lbl kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Lbl').length == 0</test>
            <error>
                <message>TFoot elem contains Lbl kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1199"/>
            <description>TFoot elem should not contain Span kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Span').length == 0</test>
            <error>
                <message>TFoot elem contains Span kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1200"/>
            <description>TFoot elem should not contain Quote kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Quote').length == 0</test>
            <error>
                <message>TFoot elem contains Quote kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1201"/>
            <description>TFoot elem should not contain Link kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Link').length == 0</test>
            <error>
                <message>TFoot elem contains Link kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1202"/>
            <description>TFoot elem should not contain Reference kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Reference').length == 0</test>
            <error>
                <message>TFoot elem contains Reference kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1203"/>
            <description>TFoot elem should not contain Annot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Annot').length == 0</test>
            <error>
                <message>TFoot elem contains Annot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1204"/>
            <description>TFoot elem should not contain Form kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Form').length == 0</test>
            <error>
                <message>TFoot elem contains Form kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1205"/>
            <description>TFoot elem should not contain Ruby kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Ruby').length == 0</test>
            <error>
                <message>TFoot elem contains Ruby kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1206"/>
            <description>TFoot elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>TFoot elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1207"/>
            <description>TFoot elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>TFoot elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1208"/>
            <description>TFoot elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>TFoot elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1209"/>
            <description>TFoot elem should not contain Warichu kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Warichu').length == 0</test>
            <error>
                <message>TFoot elem contains Warichu kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1210"/>
            <description>TFoot elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>TFoot elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1211"/>
            <description>TFoot elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>TFoot elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1212"/>
            <description>TFoot elem should not contain Index kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Index').length == 0</test>
            <error>
                <message>TFoot elem contains Index kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1213"/>
            <description>TFoot elem should not contain L kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'L').length == 0</test>
            <error>
                <message>TFoot elem contains L kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1214"/>
            <description>TFoot elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>TFoot elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1215"/>
            <description>TFoot elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>TFoot elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1216"/>
            <description>TFoot elem should not contain BibEntry kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'BibEntry').length == 0</test>
            <error>
                <message>TFoot elem contains BibEntry kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1217"/>
            <description>TFoot elem should not contain Table kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Table').length == 0</test>
            <error>
                <message>TFoot elem contains Table kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1218"/>
            <description>TFoot elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>TFoot elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1219"/>
            <description>TFoot elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>TFoot elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1220"/>
            <description>TFoot elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>TFoot elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1221"/>
            <description>TFoot elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>TFoot elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1222"/>
            <description>TFoot elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>TFoot elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1223"/>
            <description>TFoot elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>TFoot elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1224"/>
            <description>TFoot elem should not contain Figure kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Figure').length == 0</test>
            <error>
                <message>TFoot elem contains Figure kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1225"/>
            <description>TFoot elem should not contain Formula kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Formula').length == 0</test>
            <error>
                <message>TFoot elem contains Formula kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SETFoot" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1226"/>
            <description>TFoot elem should not contain content item kid</description>
            <test>hasContentItems == false</test>
            <error>
                <message>TFoot elem contains content item kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECaption" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1227"/>
            <description>Caption elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>Caption elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECaption" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1228"/>
            <description>Caption elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>Caption elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECaption" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1229"/>
            <description>Caption elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>Caption elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECaption" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1230"/>
            <description>Caption elem should contain zero or one H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length &lt;= 1</test>
            <error>
                <message>Caption contains more than one H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECaption" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1231"/>
            <description>Caption elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>Caption elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECaption" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1232"/>
            <description>Caption elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>Caption elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECaption" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1233"/>
            <description>Caption elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>Caption elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECaption" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1234"/>
            <description>Caption elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>Caption elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECaption" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1235"/>
            <description>Caption elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>Caption elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECaption" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1236"/>
            <description>Caption elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>Caption elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECaption" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1237"/>
            <description>Caption elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>Caption elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECaption" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1238"/>
            <description>Caption elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>Caption elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECaption" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1239"/>
            <description>Caption elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>Caption elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECaption" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1240"/>
            <description>Caption elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>Caption elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECaption" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1241"/>
            <description>Caption elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>Caption elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECaption" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1242"/>
            <description>Caption elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>Caption elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECaption" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1243"/>
            <description>Caption elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>Caption elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SECaption" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1244"/>
            <description>Caption elem should not contain Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length == 0</test>
            <error>
                <message>Caption elem contains Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFigure" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1245"/>
            <description>Figure elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>Figure elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFigure" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1246"/>
            <description>Figure elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>Figure elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFigure" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1247"/>
            <description>Figure elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>Figure elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFigure" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1248"/>
            <description>Figure elem should contain zero or one H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length &lt;= 1</test>
            <error>
                <message>Figure contains more than one H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFigure" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1249"/>
            <description>Figure elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>Figure elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFigure" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1250"/>
            <description>Figure elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>Figure elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFigure" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1251"/>
            <description>Figure elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>Figure elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFigure" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1252"/>
            <description>Figure elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>Figure elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFigure" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1253"/>
            <description>Figure elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>Figure elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFigure" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1254"/>
            <description>Figure elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>Figure elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFigure" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1255"/>
            <description>Figure elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>Figure elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFigure" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1256"/>
            <description>Figure elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>Figure elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFigure" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1257"/>
            <description>Figure elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>Figure elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFigure" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1258"/>
            <description>Figure elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>Figure elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFigure" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1259"/>
            <description>Figure elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>Figure elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFigure" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1260"/>
            <description>Figure elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>Figure elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFigure" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1261"/>
            <description>Figure elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>Figure elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFigure" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1262"/>
            <description>Figure elem should contain zero or one Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length &lt;= 1</test>
            <error>
                <message>Figure contains more than one Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFormula" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1263"/>
            <description>Formula elem should not contain Document kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Document').length == 0</test>
            <error>
                <message>Formula elem contains Document kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFormula" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1264"/>
            <description>Formula elem should not contain Art kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Art').length == 0</test>
            <error>
                <message>Formula elem contains Art kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFormula" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1265"/>
            <description>Formula elem should not contain Sect kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Sect').length == 0</test>
            <error>
                <message>Formula elem contains Sect kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFormula" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1266"/>
            <description>Formula elem should not contain TOC kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOC').length == 0</test>
            <error>
                <message>Formula elem contains TOC kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFormula" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1267"/>
            <description>Formula elem should not contain TOCI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TOCI').length == 0</test>
            <error>
                <message>Formula elem contains TOCI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFormula" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1268"/>
            <description>Formula elem should contain zero or one H kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'H').length &lt;= 1</test>
            <error>
                <message>Formula contains more than one H kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFormula" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1269"/>
            <description>Formula elem should not contain RB kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RB').length == 0</test>
            <error>
                <message>Formula elem contains RB kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFormula" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1270"/>
            <description>Formula elem should not contain RT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RT').length == 0</test>
            <error>
                <message>Formula elem contains RT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFormula" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1271"/>
            <description>Formula elem should not contain RP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'RP').length == 0</test>
            <error>
                <message>Formula elem contains RP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFormula" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1272"/>
            <description>Formula elem should not contain WT kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WT').length == 0</test>
            <error>
                <message>Formula elem contains WT kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFormula" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1273"/>
            <description>Formula elem should not contain WP kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'WP').length == 0</test>
            <error>
                <message>Formula elem contains WP kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFormula" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1274"/>
            <description>Formula elem should not contain LI kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LI').length == 0</test>
            <error>
                <message>Formula elem contains LI kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFormula" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1275"/>
            <description>Formula elem should not contain LBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'LBody').length == 0</test>
            <error>
                <message>Formula elem contains LBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFormula" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1276"/>
            <description>Formula elem should not contain TR kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TR').length == 0</test>
            <error>
                <message>Formula elem contains TR kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFormula" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1277"/>
            <description>Formula elem should not contain TH kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TH').length == 0</test>
            <error>
                <message>Formula elem contains TH kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFormula" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1278"/>
            <description>Formula elem should not contain TD kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TD').length == 0</test>
            <error>
                <message>Formula elem contains TD kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFormula" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1279"/>
            <description>Formula elem should not contain THead kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'THead').length == 0</test>
            <error>
                <message>Formula elem contains THead kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFormula" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1280"/>
            <description>Formula elem should not contain TBody kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TBody').length == 0</test>
            <error>
                <message>Formula elem contains TBody kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFormula" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1281"/>
            <description>Formula elem should not contain TFoot kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'TFoot').length == 0</test>
            <error>
                <message>Formula elem contains TFoot kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
        <rule object="SEFormula" deferred="false">
            <id specification="ISO_19005_2" clause="Annex_L" testNumber="1282"/>
            <description>Formula elem should contain zero or one Caption kid</description>
            <test>kidsStandardTypes.split('&amp;').filter(elem =&gt; elem == 'Caption').length &lt;= 1</test>
            <error>
                <message>Formula contains more than one Caption kid</message>
                <arguments/>
            </error>
            <references>
                <reference specification="ISO-32000-1" clause="Annex_L"/>
            </references>
        </rule>
    </rules>
    <variables/>
</profile>
